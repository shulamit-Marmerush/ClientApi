{"ast":null,"code":"// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5216\";\n//  axios.defaults.baseURL = apiUrl;\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n// setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete });\n//     try {\n//         const patchData = [\n//             { op: \"replace\", path: \"/isComplete\", value: isComplete }\n//         ];\n//         const result = await axios.patch(`${apiUrl}/items/${id}`, patchData, {\n//             headers: {\n//                 'Content-Type': 'application/json-patch+json'\n//             }\n//         });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error setting task completion:\", error.message);\n//         throw error;\n//     }\n// },\n//   deleteTask: async (id) => {\n//     try {\n//         await axios.delete(`/items/${id}`);\n//         console.log('Task deleted successfully');\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// }\n// };\nimport axios from'axios';const apiUrl=\"http://localhost:5216\";axios.defaults.baseURL=apiUrl;// הוספת interceptor לתפיסת שגיאות\naxios.interceptors.response.use(response=>response,error=>{console.error(\"HTTP Error:\",error.message);if(error.response){console.error(\"Response data:\",error.response.data);console.error(\"Response status:\",error.response.status);}return Promise.reject(error);// זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n});export default{getTasks:async()=>{const result=await axios.get(\"\".concat(apiUrl,\"/items\"));return result.data;},addTask:async name=>{console.log('addTask',name);try{const result=await axios.post(\"\".concat(apiUrl,\"/items\"),{name});return result.data;}catch(error){console.error(\"Error adding task:\",error.message);throw error;// זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n}},setCompleted:async(id,isComplete)=>{console.log('setCompleted',{id,isComplete});try{const updatedItem={isComplete:isComplete};const result=await axios.put(\"\".concat(apiUrl,\"/items/\").concat(id),updatedItem,{headers:{'Content-Type':'application/json'}});return result.data;}catch(error){console.error(\"Error setting task completion:\",error.message);throw error;}},deleteTask:async id=>{try{await axios.delete(\"/items/\".concat(id));console.log('Task deleted successfully');}catch(error){console.error(\"Error deleting task:\",error.message);throw error;// זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n}}};","map":{"version":3,"names":["axios","apiUrl","defaults","baseURL","interceptors","response","use","error","console","message","data","status","Promise","reject","getTasks","result","get","concat","addTask","name","log","post","setCompleted","id","isComplete","updatedItem","put","headers","deleteTask","delete"],"sources":["C:/Users/User/Saved Games/Desktop/תכנות/פרקטיקוד/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5216\";\n//  axios.defaults.baseURL = apiUrl;\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n  \n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n\n// setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete });\n//     try {\n//         const patchData = [\n//             { op: \"replace\", path: \"/isComplete\", value: isComplete }\n//         ];\n//         const result = await axios.patch(`${apiUrl}/items/${id}`, patchData, {\n//             headers: {\n//                 'Content-Type': 'application/json-patch+json'\n//             }\n//         });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error setting task completion:\", error.message);\n//         throw error;\n//     }\n// },\n\n\n\n\n\n//   deleteTask: async (id) => {\n//     try {\n//         await axios.delete(`/items/${id}`);\n//         console.log('Task deleted successfully');\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// }\n\n// };\n\n\nimport axios from 'axios';\n\nconst apiUrl = \"http://localhost:5216\";\naxios.defaults.baseURL = apiUrl;\n\n// הוספת interceptor לתפיסת שגיאות\naxios.interceptors.response.use(\n    response => response,\n    error => {\n        console.error(\"HTTP Error:\", error.message);\n        if (error.response) {\n            console.error(\"Response data:\", error.response.data);\n            console.error(\"Response status:\", error.response.status);\n        }\n        return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n    }\n);\n\nexport default {\n    getTasks: async () => {\n        const result = await axios.get(`${apiUrl}/items`);    \n        return result.data;\n    },\n\n    addTask: async (name) => {\n        console.log('addTask', name);\n        try {\n            const result = await axios.post(`${apiUrl}/items`, { name });\n            return result.data;\n        } catch (error) {\n            console.error(\"Error adding task:\", error.message);\n            throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n        }\n    },\n\n    setCompleted: async (id, isComplete) => {\n        console.log('setCompleted', { id, isComplete });\n        try {\n            const updatedItem = {\n                isComplete: isComplete\n            };\n            const result = await axios.put(`${apiUrl}/items/${id}`, updatedItem, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            return result.data;\n        } catch (error) {\n            console.error(\"Error setting task completion:\", error.message);\n            throw error;\n        }\n    },\n\n    deleteTask: async (id) => {\n        try {\n            await axios.delete(`/items/${id}`);\n            console.log('Task deleted successfully');\n        } catch (error) {\n            console.error(\"Error deleting task:\", error.message);\n            throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n        }\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}