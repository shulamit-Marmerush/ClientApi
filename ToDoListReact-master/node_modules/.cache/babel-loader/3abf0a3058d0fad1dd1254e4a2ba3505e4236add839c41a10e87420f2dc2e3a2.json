{"ast":null,"code":"// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5216\";\n//  axios.defaults.baseURL = apiUrl;\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n//   setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete });\n//     try {\n//         // שליפת הפריט הקיים מהשרת\n//         const existingItemResponse = await axios.get(`${apiUrl}/items/${id}`);\n//         const existingItem = existingItemResponse.data;\n\n//         // הכנת הנתונים לעדכון\n//         const updatedItem = {\n//             name: existingItem.name, // שומר את השם הקודם\n//             isComplete: isComplete // מעדכן את ה-isComplete\n//         };\n\n//         // שליחת הבקשה לעדכון\n//         const result = await axios.put(`${apiUrl}/items/${id}`, updatedItem, {\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             }\n//         });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error setting task completion:\", error.message);\n//         throw error;\n//     }\n// },\n\n//   deleteTask: async (id) => {\n//     try {\n//         await axios.delete(`/items/${id}`);\n//         console.log('Task deleted successfully');\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// }\n\n// };\n\n// import axios from 'axios';\n\n// const apiUrl = \"http://localhost:5216\";\n// axios.defaults.baseURL = apiUrl;\n\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n\n// export default {\n//     getTasks: async () => {\n//         const result = await axios.get(`${apiUrl}/items`);    \n//         return result.data;\n//     },\n\n//     addTask: async (name) => {\n//         console.log('addTask', name);\n//         try {\n//             const result = await axios.post(`${apiUrl}/items`, { name });\n//             return result.data;\n//         } catch (error) {\n//             console.error(\"Error adding task:\", error.message);\n//             throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//         }\n//     },\n\n//   //   setCompleted: async (id, isComplete) => {\n//   //     console.log('setCompleted', { id, isComplete });\n//   //     try {\n//   //         // שליפת הפריט הקיים מהשרת\n//   //         const existingItemResponse = await axios.get(`${apiUrl}/items/${id}`);\n//   //         const existingItem = existingItemResponse.data;\n\n//   //         // הכנת הנתונים לעדכון\n//   //         const updatedItem = {\n//   //             name: existingItem.name, // שומר את השם הקודם\n//   //             isComplete: isComplete // מעדכן את ה-isComplete\n//   //         };\n\n//   //         // שליחת הבקשה לעדכון\n//   //         const result = await axios.put(`${apiUrl}/items/${id}`, updatedItem, {\n//   //             headers: {\n//   //                 'Content-Type': 'application/json'\n//   //             }\n//   //         });\n//   //         return result.data;\n//   //     } catch (error) {\n//   //         console.error(\"Error setting task completion:\", error.message);\n//   //         throw error;\n//   //     }\n//   // },\n\n//     deleteTask: async (id) => {\n//         try {\n//             await axios.delete(`/items/${id}`);\n//             console.log('Task deleted successfully');\n//         } catch (error) {\n//             console.error(\"Error deleting task:\", error.message);\n//             throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//         }\n//     }\n// };","map":{"version":3,"names":[],"sources":["C:/Users/User/Saved Games/Desktop/תכנות/פרקטיקוד/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5216\";\n//  axios.defaults.baseURL = apiUrl;\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n  \n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n  //   setCompleted: async (id, isComplete) => {\n  //     console.log('setCompleted', { id, isComplete });\n  //     try {\n  //         // שליפת הפריט הקיים מהשרת\n  //         const existingItemResponse = await axios.get(`${apiUrl}/items/${id}`);\n  //         const existingItem = existingItemResponse.data;\n  \n  //         // הכנת הנתונים לעדכון\n  //         const updatedItem = {\n  //             name: existingItem.name, // שומר את השם הקודם\n  //             isComplete: isComplete // מעדכן את ה-isComplete\n  //         };\n  \n  //         // שליחת הבקשה לעדכון\n  //         const result = await axios.put(`${apiUrl}/items/${id}`, updatedItem, {\n  //             headers: {\n  //                 'Content-Type': 'application/json'\n  //             }\n  //         });\n  //         return result.data;\n  //     } catch (error) {\n  //         console.error(\"Error setting task completion:\", error.message);\n  //         throw error;\n  //     }\n  // },\n  \n\n\n\n\n\n//   deleteTask: async (id) => {\n//     try {\n//         await axios.delete(`/items/${id}`);\n//         console.log('Task deleted successfully');\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// }\n\n// };\n\n\n// import axios from 'axios';\n\n// const apiUrl = \"http://localhost:5216\";\n// axios.defaults.baseURL = apiUrl;\n\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n\n// export default {\n//     getTasks: async () => {\n//         const result = await axios.get(`${apiUrl}/items`);    \n//         return result.data;\n//     },\n\n//     addTask: async (name) => {\n//         console.log('addTask', name);\n//         try {\n//             const result = await axios.post(`${apiUrl}/items`, { name });\n//             return result.data;\n//         } catch (error) {\n//             console.error(\"Error adding task:\", error.message);\n//             throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//         }\n//     },\n\n//   //   setCompleted: async (id, isComplete) => {\n//   //     console.log('setCompleted', { id, isComplete });\n//   //     try {\n//   //         // שליפת הפריט הקיים מהשרת\n//   //         const existingItemResponse = await axios.get(`${apiUrl}/items/${id}`);\n//   //         const existingItem = existingItemResponse.data;\n  \n//   //         // הכנת הנתונים לעדכון\n//   //         const updatedItem = {\n//   //             name: existingItem.name, // שומר את השם הקודם\n//   //             isComplete: isComplete // מעדכן את ה-isComplete\n//   //         };\n  \n//   //         // שליחת הבקשה לעדכון\n//   //         const result = await axios.put(`${apiUrl}/items/${id}`, updatedItem, {\n//   //             headers: {\n//   //                 'Content-Type': 'application/json'\n//   //             }\n//   //         });\n//   //         return result.data;\n//   //     } catch (error) {\n//   //         console.error(\"Error setting task completion:\", error.message);\n//   //         throw error;\n//   //     }\n//   // },\n  \n\n//     deleteTask: async (id) => {\n//         try {\n//             await axios.delete(`/items/${id}`);\n//             console.log('Task deleted successfully');\n//         } catch (error) {\n//             console.error(\"Error deleting task:\", error.message);\n//             throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//         }\n//     }\n// };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}