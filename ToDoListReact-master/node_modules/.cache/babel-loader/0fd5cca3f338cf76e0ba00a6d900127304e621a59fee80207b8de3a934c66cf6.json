{"ast":null,"code":"// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5216\";\n\n// // axios.defaults.baseURL = \"http://localhost:5216\";\n\n// // הוספת interceptor לתפיסת שגיאות\n// // axios.interceptors.response.use(\n// //     response => response,\n// //     error => {\n// //         console.error(\"HTTP Error:\", error.message);\n// //         if (error.response) {\n// //             console.error(\"Response data:\", error.response.data);\n// //             console.error(\"Response status:\", error.response.status);\n// //         }\n// //         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n// //     }\n// //);\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   // addTask: async(name)=>{\n//   //   console.log('addTask', name)\n//   //  const result= await axios.post(`${apiUrl}/items`,{name});\n//   //   return result.data;\n\n//   // },\n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     //TODO\n//     return {};\n//   },\n\n//   // deleteTask:async(itemID)=>{\n//   //   console.log('deleteTask',itemID)\n//   //   try{\n//   //     const response=await axios.delete(`${apiUrl}/items/${itemID}`);\n//   //   }\n//   //   catch(error){\n//   //     console.error(\"Error deletזing task:\", error.message);\n//   //     throw error;\n//   //   }\n\n//   // }\n\n//   deleteTask: async (itemID) => {\n//     try {\n//         const response = await axios.delete(`/items/${itemID}`);\n//         if (response.status === 200) {\n//             console.log('Task deleted successfully');\n//             return response.data;\n//         } else {\n//             console.error('Failed to delete task:', response.statusText);\n//             throw new Error('Failed to delete task');\n//         }\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         throw error;\n//     }\n\n// },\n\n// // deleteTodo: async (itemID, setTasks) => {\n// //   try {\n// //       await api.deleteTask(itemID);\n// //       // עדכן את המצב המקומי כדי להסיר את המשימה\n// //       setTasks(prevTasks => prevTasks.filter(task => task.id !== itemID));\n// //   } catch (error) {\n// //       console.error(\"Error deleting todo:\", error);\n// //   }\n// // },\n\n// };","map":{"version":3,"names":[],"sources":["C:/Users/User/Saved Games/Desktop/תכנות/פרקטיקוד/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5216\";\n\n// // axios.defaults.baseURL = \"http://localhost:5216\";\n\n// // הוספת interceptor לתפיסת שגיאות\n// // axios.interceptors.response.use(\n// //     response => response,\n// //     error => {\n// //         console.error(\"HTTP Error:\", error.message);\n// //         if (error.response) {\n// //             console.error(\"Response data:\", error.response.data);\n// //             console.error(\"Response status:\", error.response.status);\n// //         }\n// //         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n// //     }\n// //);\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   // addTask: async(name)=>{\n//   //   console.log('addTask', name)\n//   //  const result= await axios.post(`${apiUrl}/items`,{name});\n//   //   return result.data;\n\n//   // },\n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     //TODO\n//     return {};\n//   },\n\n//   // deleteTask:async(itemID)=>{\n//   //   console.log('deleteTask',itemID)\n//   //   try{\n//   //     const response=await axios.delete(`${apiUrl}/items/${itemID}`);\n//   //   }\n//   //   catch(error){\n//   //     console.error(\"Error deletזing task:\", error.message);\n//   //     throw error;\n//   //   }\n\n//   // }\n  \n\n//   deleteTask: async (itemID) => {\n//     try {\n//         const response = await axios.delete(`/items/${itemID}`);\n//         if (response.status === 200) {\n//             console.log('Task deleted successfully');\n//             return response.data;\n//         } else {\n//             console.error('Failed to delete task:', response.statusText);\n//             throw new Error('Failed to delete task');\n//         }\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         throw error;\n//     }\n  \n// },\n\n// // deleteTodo: async (itemID, setTasks) => {\n// //   try {\n// //       await api.deleteTask(itemID);\n// //       // עדכן את המצב המקומי כדי להסיר את המשימה\n// //       setTasks(prevTasks => prevTasks.filter(task => task.id !== itemID));\n// //   } catch (error) {\n// //       console.error(\"Error deleting todo:\", error);\n// //   }\n// // },\n\n\n\n// };\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}