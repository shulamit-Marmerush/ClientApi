{"ast":null,"code":"// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5216\";\n//  axios.defaults.baseURL = apiUrl;\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n\n//   setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete });\n//     try {\n//       const result = await axios.put(`/items/${id}`, { isComplete });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error setting task completion:\", error.message);\n//         throw error;\n//     }\n// },\n\n//   deleteTask: async (id) => {\n//     try {\n//         await axios.delete(`/items/${id}`);\n//         console.log('Task deleted successfully');\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// }\n\n// };\n\nimport axios from 'axios';\nconst apiUrl = \"http://localhost:5216\";\naxios.defaults.baseURL = apiUrl;\n\n// הוספת interceptor לתפיסת שגיאות\naxios.interceptors.response.use(response => response, error => {\n  console.error(\"HTTP Error:\", error.message);\n  if (error.response) {\n    console.error(\"Response data:\", error.response.data);\n    console.error(\"Response status:\", error.response.status);\n  }\n  return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n});\nexport default {\n  getTasks: async () => {\n    try {\n      const result = await axios.get('/items');\n      return result.data;\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error.message);\n      throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n    }\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    try {\n      const result = await axios.post('/items', {\n        name\n      });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error adding task:\", error.message);\n      throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    try {\n      const result = await axios.put(`/items/${id}`, {\n        isComplete\n      });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error setting task completion:\", error.message);\n      throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n    }\n  },\n  deleteTask: async id => {\n    try {\n      await axios.delete(`/items/${id}`);\n      console.log('Task deleted successfully');\n    } catch (error) {\n      console.error(\"Error deleting task:\", error.message);\n      throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n    }\n  }\n};","map":{"version":3,"names":["axios","apiUrl","defaults","baseURL","interceptors","response","use","error","console","message","data","status","Promise","reject","getTasks","result","get","addTask","name","log","post","setCompleted","id","isComplete","put","deleteTask","delete"],"sources":["C:/Users/User/Saved Games/Desktop/תכנות/פרקטיקוד/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5216\";\n//  axios.defaults.baseURL = apiUrl;\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n  \n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n\n//   setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete });\n//     try {\n//       const result = await axios.put(`/items/${id}`, { isComplete });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error setting task completion:\", error.message);\n//         throw error;\n//     }\n// },\n\n//   deleteTask: async (id) => {\n//     try {\n//         await axios.delete(`/items/${id}`);\n//         console.log('Task deleted successfully');\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// }\n\n// };\n\nimport axios from 'axios';\n\nconst apiUrl = \"http://localhost:5216\";\naxios.defaults.baseURL = apiUrl;\n\n// הוספת interceptor לתפיסת שגיאות\naxios.interceptors.response.use(\n    response => response,\n    error => {\n        console.error(\"HTTP Error:\", error.message);\n        if (error.response) {\n            console.error(\"Response data:\", error.response.data);\n            console.error(\"Response status:\", error.response.status);\n        }\n        return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n    }\n);\n\nexport default {\n    getTasks: async () => {\n        try {\n            const result = await axios.get('/items');    \n            return result.data;\n        } catch (error) {\n            console.error(\"Error fetching tasks:\", error.message);\n            throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n        }\n    },\n\n    addTask: async (name) => {\n        console.log('addTask', name);\n        try {\n            const result = await axios.post('/items', { name });\n            return result.data;\n        } catch (error) {\n            console.error(\"Error adding task:\", error.message);\n            throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n        }\n    },\n\n    setCompleted: async (id, isComplete) => {\n        console.log('setCompleted', { id, isComplete });\n        try {\n            const result = await axios.put(`/items/${id}`, { isComplete });\n            return result.data;\n        } catch (error) {\n            console.error(\"Error setting task completion:\", error.message);\n            throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n        }\n    },\n\n    deleteTask: async (id) => {\n        try {\n            await axios.delete(`/items/${id}`);\n            console.log('Task deleted successfully');\n        } catch (error) {\n            console.error(\"Error deleting task:\", error.message);\n            throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n        }\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}