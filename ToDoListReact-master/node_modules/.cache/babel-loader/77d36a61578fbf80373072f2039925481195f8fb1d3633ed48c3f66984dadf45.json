{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = \"http://localhost:5216\";\n\n// axios.defaults.baseURL = \"http://localhost:5216\";\n\n// הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n//);\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`);\n    return result.data;\n  },\n  // addTask: async(name)=>{\n  //   console.log('addTask', name)\n  //  const result= await axios.post(`${apiUrl}/items`,{name});\n  //   return result.data;\n\n  // },\n  addTask: async name => {\n    console.log('addTask', name);\n    try {\n      const result = await axios.post(`${apiUrl}/items`, {\n        name\n      });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error adding task:\", error.message);\n      throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    //TODO\n    return {};\n  }\n\n  // deleteTask:async(itemID)=>{\n  //   console.log('deleteTask',itemID)\n  //   try{\n  //     const response=await axios.delete(`${apiUrl}/items/${itemID}`);\n  //   }\n  //   catch(error){\n  //     console.error(\"Error deletזing task:\", error.message);\n  //     throw error;\n  //   }\n\n  // }\n\n  //   deleteTask: async (itemID) => {\n  //     try {\n  //         const response = await axios.delete(`/items/${itemID}`);\n  //         if (response.status === 200) {\n  //             console.log('Task deleted successfully');\n  //             return response.data;\n  //         } else {\n  //             console.error('Failed to delete task:', response.statusText);\n  //             throw new Error('Failed to delete task');\n  //         }\n  //     } catch (error) {\n  //         console.error(\"Error deleting task:\", error.message);\n  //         if (error.response) {\n  //             console.error(\"Response data:\", error.response.data);\n  //             console.error(\"Response status:\", error.response.status);\n  //         }\n  //         throw error;\n  //     }\n\n  // },\n\n  // deleteTodo: async (itemID, setTasks) => {\n  //   try {\n  //       await api.deleteTask(itemID);\n  //       // עדכן את המצב המקומי כדי להסיר את המשימה\n  //       setTasks(prevTasks => prevTasks.filter(task => task.id !== itemID));\n  //   } catch (error) {\n  //       console.error(\"Error deleting todo:\", error);\n  //   }\n  // },\n};","map":{"version":3,"names":["axios","apiUrl","getTasks","result","get","data","addTask","name","console","log","post","error","message","setCompleted","id","isComplete"],"sources":["C:/Users/User/Saved Games/Desktop/תכנות/פרקטיקוד/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n const apiUrl = \"http://localhost:5216\";\n\n// axios.defaults.baseURL = \"http://localhost:5216\";\n\n// הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n//);\nexport default {\n\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`)    \n    return result.data;\n  },\n\n  // addTask: async(name)=>{\n  //   console.log('addTask', name)\n  //  const result= await axios.post(`${apiUrl}/items`,{name});\n  //   return result.data;\n\n  // },\n  addTask: async(name) => {\n    console.log('addTask', name);\n    try {\n        const result = await axios.post(`${apiUrl}/items`, { name });\n        return result.data;\n    } catch (error) {\n        console.error(\"Error adding task:\", error.message);\n\n        throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n    }\n},\n\n\n  setCompleted: async(id, isComplete)=>{\n    console.log('setCompleted', {id, isComplete})\n    //TODO\n    return {};\n  },\n  \n\n  // deleteTask:async(itemID)=>{\n  //   console.log('deleteTask',itemID)\n  //   try{\n  //     const response=await axios.delete(`${apiUrl}/items/${itemID}`);\n  //   }\n  //   catch(error){\n  //     console.error(\"Error deletזing task:\", error.message);\n  //     throw error;\n  //   }\n\n  // }\n  \n\n//   deleteTask: async (itemID) => {\n//     try {\n//         const response = await axios.delete(`/items/${itemID}`);\n//         if (response.status === 200) {\n//             console.log('Task deleted successfully');\n//             return response.data;\n//         } else {\n//             console.error('Failed to delete task:', response.statusText);\n//             throw new Error('Failed to delete task');\n//         }\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         throw error;\n//     }\n  \n// },\n\n// deleteTodo: async (itemID, setTasks) => {\n//   try {\n//       await api.deleteTask(itemID);\n//       // עדכן את המצב המקומי כדי להסיר את המשימה\n//       setTasks(prevTasks => prevTasks.filter(task => task.id !== itemID));\n//   } catch (error) {\n//       console.error(\"Error deleting todo:\", error);\n//   }\n// },\n\n\n\n};\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACxB,MAAMC,MAAM,GAAG,uBAAuB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;EAEbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,MAAM,QAAQ,CAAC;IACjD,OAAOE,MAAM,CAACE,IAAI;EACpB,CAAC;EAED;EACA;EACA;EACA;;EAEA;EACAC,OAAO,EAAE,MAAMC,IAAI,IAAK;IACtBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,IAAI,CAAC;IAC5B,IAAI;MACA,MAAMJ,MAAM,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,MAAM,QAAQ,EAAE;QAAEM;MAAK,CAAC,CAAC;MAC5D,OAAOJ,MAAM,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACC,OAAO,CAAC;MAElD,MAAMD,KAAK,CAAC,CAAC;IACjB;EACJ,CAAC;EAGCE,YAAY,EAAE,MAAAA,CAAMC,EAAE,EAAEC,UAAU,KAAG;IACnCP,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAACK,EAAE;MAAEC;IAAU,CAAC,CAAC;IAC7C;IACA,OAAO,CAAC,CAAC;EACX;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAGF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAIA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}