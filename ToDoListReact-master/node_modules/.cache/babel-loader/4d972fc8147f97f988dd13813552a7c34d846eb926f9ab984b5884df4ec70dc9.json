{"ast":null,"code":"// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5216\";\n\n// // axios.defaults.baseURL = \"http://localhost:5216\";\n\n// // הוספת interceptor לתפיסת שגיאות\n// // axios.interceptors.response.use(\n// //     response => response,\n// //     error => {\n// //         console.error(\"HTTP Error:\", error.message);\n// //         if (error.response) {\n// //             console.error(\"Response data:\", error.response.data);\n// //             console.error(\"Response status:\", error.response.status);\n// //         }\n// //         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n// //     }\n// //);\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   // addTask: async(name)=>{\n//   //   console.log('addTask', name)\n//   //  const result= await axios.post(`${apiUrl}/items`,{name});\n//   //   return result.data;\n\n//   // },\n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     //TODO\n//     return {};\n//   },\n\n//   // deleteTask:async(itemID)=>{\n//   //   console.log('deleteTask',itemID)\n//   //   try{\n//   //     const response=await axios.delete(`${apiUrl}/items/${itemID}`);\n//   //   }\n//   //   catch(error){\n//   //     console.error(\"Error deletזing task:\", error.message);\n//   //     throw error;\n//   //   }\n\n//   // }\n\n//   deleteTask: async (itemID) => {\n//     try {\n//         const response = await axios.delete(`/items/${itemID}`);\n//         if (response.status === 200) {\n//             console.log('Task deleted successfully');\n//             return response.data;\n//         } else {\n//             console.error('Failed to delete task:', response.statusText);\n//             throw new Error('Failed to delete task');\n//         }\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         throw error;\n//     }\n\n// },\n\n// // deleteTodo: async (itemID, setTasks) => {\n// //   try {\n// //       await api.deleteTask(itemID);\n// //       // עדכן את המצב המקומי כדי להסיר את המשימה\n// //       setTasks(prevTasks => prevTasks.filter(task => task.id !== itemID));\n// //   } catch (error) {\n// //       console.error(\"Error deleting todo:\", error);\n// //   }\n// // },\n\n// };\n\nimport axios from 'axios';\nconst apiUrl = \"http://localhost:5216\";\n\n// הוספת interceptor לתפיסת שגיאות\naxios.interceptors.response.use(response => response, error => {\n  console.error(\"HTTP Error:\", error.message);\n  if (error.response) {\n    console.error(\"Response data:\", error.response.data);\n    console.error(\"Response status:\", error.response.status);\n  }\n  return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n});\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`);\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    try {\n      const result = await axios.post(`${apiUrl}/items`, {\n        name\n      });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error adding task:\", error.message);\n      throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    try {\n      const result = await axios.patch(`${apiUrl}/items/${id}`, {\n        isComplete\n      });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error updating task completion:\", error.message);\n      throw error;\n    }\n  },\n  deleteTask: async itemID => {\n    try {\n      const response = await axios.delete(`${apiUrl}/items/${itemID}`);\n      if (response.status === 200) {\n        console.log('Task deleted successfully');\n        return response.data;\n      } else {\n        console.error('Failed to delete task:', response.statusText);\n        throw new Error('Failed to delete task');\n      }\n    } catch (error) {\n      console.error(\"Error deleting task:\", error.message);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n      }\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","apiUrl","interceptors","response","use","error","console","message","data","status","Promise","reject","getTasks","result","get","addTask","name","log","post","setCompleted","id","isComplete","patch","deleteTask","itemID","delete","statusText","Error"],"sources":["C:/Users/User/Saved Games/Desktop/תכנות/פרקטיקוד/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5216\";\n\n// // axios.defaults.baseURL = \"http://localhost:5216\";\n\n// // הוספת interceptor לתפיסת שגיאות\n// // axios.interceptors.response.use(\n// //     response => response,\n// //     error => {\n// //         console.error(\"HTTP Error:\", error.message);\n// //         if (error.response) {\n// //             console.error(\"Response data:\", error.response.data);\n// //             console.error(\"Response status:\", error.response.status);\n// //         }\n// //         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n// //     }\n// //);\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   // addTask: async(name)=>{\n//   //   console.log('addTask', name)\n//   //  const result= await axios.post(`${apiUrl}/items`,{name});\n//   //   return result.data;\n\n//   // },\n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     //TODO\n//     return {};\n//   },\n\n//   // deleteTask:async(itemID)=>{\n//   //   console.log('deleteTask',itemID)\n//   //   try{\n//   //     const response=await axios.delete(`${apiUrl}/items/${itemID}`);\n//   //   }\n//   //   catch(error){\n//   //     console.error(\"Error deletזing task:\", error.message);\n//   //     throw error;\n//   //   }\n\n//   // }\n  \n\n//   deleteTask: async (itemID) => {\n//     try {\n//         const response = await axios.delete(`/items/${itemID}`);\n//         if (response.status === 200) {\n//             console.log('Task deleted successfully');\n//             return response.data;\n//         } else {\n//             console.error('Failed to delete task:', response.statusText);\n//             throw new Error('Failed to delete task');\n//         }\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         throw error;\n//     }\n  \n// },\n\n// // deleteTodo: async (itemID, setTasks) => {\n// //   try {\n// //       await api.deleteTask(itemID);\n// //       // עדכן את המצב המקומי כדי להסיר את המשימה\n// //       setTasks(prevTasks => prevTasks.filter(task => task.id !== itemID));\n// //   } catch (error) {\n// //       console.error(\"Error deleting todo:\", error);\n// //   }\n// // },\n\n\n\n// };\n\nimport axios from 'axios';\n\nconst apiUrl = \"http://localhost:5216\";\n\n// הוספת interceptor לתפיסת שגיאות\naxios.interceptors.response.use(\n    response => response,\n    error => {\n        console.error(\"HTTP Error:\", error.message);\n        if (error.response) {\n            console.error(\"Response data:\", error.response.data);\n            console.error(\"Response status:\", error.response.status);\n        }\n        return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n    }\n);\n\nexport default {\n    getTasks: async () => {\n        const result = await axios.get(`${apiUrl}/items`);\n        return result.data;\n    },\n\n    addTask: async (name) => {\n        console.log('addTask', name);\n        try {\n            const result = await axios.post(`${apiUrl}/items`, { name });\n            return result.data;\n        } catch (error) {\n            console.error(\"Error adding task:\", error.message);\n            throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n        }\n    },\n\n    setCompleted: async (id, isComplete) => {\n        console.log('setCompleted', { id, isComplete });\n        try {\n            const result = await axios.patch(`${apiUrl}/items/${id}`, { isComplete });\n            return result.data;\n        } catch (error) {\n            console.error(\"Error updating task completion:\", error.message);\n            throw error;\n        }\n    },\n\n    deleteTask: async (itemID) => {\n        try {\n            const response = await axios.delete(`${apiUrl}/items/${itemID}`);\n            if (response.status === 200) {\n                console.log('Task deleted successfully');\n                return response.data;\n            } else {\n                console.error('Failed to delete task:', response.statusText);\n                throw new Error('Failed to delete task');\n            }\n        } catch (error) {\n            console.error(\"Error deleting task:\", error.message);\n            if (error.response) {\n                console.error(\"Response data:\", error.response.data);\n                console.error(\"Response status:\", error.response.status);\n            }\n            throw error;\n        }\n    },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}