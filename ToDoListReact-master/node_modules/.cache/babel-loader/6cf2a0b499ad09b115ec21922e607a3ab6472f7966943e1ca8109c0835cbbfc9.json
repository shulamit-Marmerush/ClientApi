{"ast":null,"code":"// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5216\";\n//  axios.defaults.baseURL = apiUrl;\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n\n// setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete });\n//     try {\n//         const patchData = [\n//             { op: \"replace\", path: \"/isComplete\", value: isComplete }\n//         ];\n//         const result = await axios.patch(`${apiUrl}/items/${id}`, patchData, {\n//             headers: {\n//                 'Content-Type': 'application/json-patch+json'\n//             }\n//         });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error setting task completion:\", error.message);\n//         throw error;\n//     }\n// },\n\n//   deleteTask: async (id) => {\n//     try {\n//         await axios.delete(`/items/${id}`);\n//         console.log('Task deleted successfully');\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// }\n\n// };\n\nimport axios from 'axios';\nconst apiUrl = \"http://localhost:5216\";\naxios.defaults.baseURL = apiUrl;\n\n// הוספת interceptor לתפיסת שגיאות\naxios.interceptors.response.use(response => response, error => {\n  console.error(\"HTTP Error:\", error.message);\n  if (error.response) {\n    console.error(\"Response data:\", error.response.data);\n    console.error(\"Response status:\", error.response.status);\n  }\n  return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n});\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`);\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    try {\n      const result = await axios.post(`${apiUrl}/items`, {\n        name\n      });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error adding task:\", error.message);\n      throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    try {\n      // שליפת הפריט הקיים מהשרת\n      const existingItemResponse = await axios.get(`${apiUrl}/items/${id}`);\n      const existingItem = existingItemResponse.data;\n\n      // הכנת הנתונים לעדכון\n      const updatedItem = {\n        name: existingItem.name,\n        // שומר את השם הקודם\n        isComplete: isComplete // מעדכן את ה-isComplete\n      };\n\n      // שליחת הבקשה לעדכון\n      const result = await axios.put(`${apiUrl}/items/${id}`, updatedItem, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error setting task completion:\", error.message);\n      throw error;\n    }\n  },\n  deleteTask: async id => {\n    try {\n      await axios.delete(`/items/${id}`);\n      console.log('Task deleted successfully');\n    } catch (error) {\n      console.error(\"Error deleting task:\", error.message);\n      throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n    }\n  }\n};","map":{"version":3,"names":["axios","apiUrl","defaults","baseURL","interceptors","response","use","error","console","message","data","status","Promise","reject","getTasks","result","get","addTask","name","log","post","setCompleted","id","isComplete","existingItemResponse","existingItem","updatedItem","put","headers","deleteTask","delete"],"sources":["C:/Users/User/Saved Games/Desktop/תכנות/פרקטיקוד/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5216\";\n//  axios.defaults.baseURL = apiUrl;\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n  \n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n\n// setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete });\n//     try {\n//         const patchData = [\n//             { op: \"replace\", path: \"/isComplete\", value: isComplete }\n//         ];\n//         const result = await axios.patch(`${apiUrl}/items/${id}`, patchData, {\n//             headers: {\n//                 'Content-Type': 'application/json-patch+json'\n//             }\n//         });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error setting task completion:\", error.message);\n//         throw error;\n//     }\n// },\n\n\n\n\n\n//   deleteTask: async (id) => {\n//     try {\n//         await axios.delete(`/items/${id}`);\n//         console.log('Task deleted successfully');\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// }\n\n// };\n\n\nimport axios from 'axios';\n\nconst apiUrl = \"http://localhost:5216\";\naxios.defaults.baseURL = apiUrl;\n\n// הוספת interceptor לתפיסת שגיאות\naxios.interceptors.response.use(\n    response => response,\n    error => {\n        console.error(\"HTTP Error:\", error.message);\n        if (error.response) {\n            console.error(\"Response data:\", error.response.data);\n            console.error(\"Response status:\", error.response.status);\n        }\n        return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n    }\n);\n\nexport default {\n    getTasks: async () => {\n        const result = await axios.get(`${apiUrl}/items`);    \n        return result.data;\n    },\n\n    addTask: async (name) => {\n        console.log('addTask', name);\n        try {\n            const result = await axios.post(`${apiUrl}/items`, { name });\n            return result.data;\n        } catch (error) {\n            console.error(\"Error adding task:\", error.message);\n            throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n        }\n    },\n\n    setCompleted: async (id, isComplete) => {\n      console.log('setCompleted', { id, isComplete });\n      try {\n          // שליפת הפריט הקיים מהשרת\n          const existingItemResponse = await axios.get(`${apiUrl}/items/${id}`);\n          const existingItem = existingItemResponse.data;\n  \n          // הכנת הנתונים לעדכון\n          const updatedItem = {\n              name: existingItem.name, // שומר את השם הקודם\n              isComplete: isComplete // מעדכן את ה-isComplete\n          };\n  \n          // שליחת הבקשה לעדכון\n          const result = await axios.put(`${apiUrl}/items/${id}`, updatedItem, {\n              headers: {\n                  'Content-Type': 'application/json'\n              }\n          });\n          return result.data;\n      } catch (error) {\n          console.error(\"Error setting task completion:\", error.message);\n          throw error;\n      }\n  },\n  \n\n    deleteTask: async (id) => {\n        try {\n            await axios.delete(`/items/${id}`);\n            console.log('Task deleted successfully');\n        } catch (error) {\n            console.error(\"Error deleting task:\", error.message);\n            throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n        }\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}